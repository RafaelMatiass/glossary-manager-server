generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Course {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  Glossary    Glossary[]
}

model Glossary {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  courseId    Int
  Discipline  Discipline[]
  Course      Course       @relation(fields: [courseId], references: [id])
}

model Discipline {
  id                         Int                          @id @default(autoincrement())
  name                       String
  year                       Int?
  description                String?
  glossaryId                 Int
  Glossary                   Glossary                     @relation(fields: [glossaryId], references: [id])
  Term_Discipline_Definition Term_Discipline_Definition[]
}

model Term {
  id                         Int                          @id @default(autoincrement())
  name                       String
  Term_Discipline_Definition Term_Discipline_Definition[]
  Translation                Translation[]
}

model Definition {
  id                         Int                          @id @default(autoincrement())
  description                String?
  page                       String                       @unique
  sourceId                   Int
  Source                     Source                       @relation(fields: [sourceId], references: [id])
  Term_Discipline_Definition Term_Discipline_Definition[]
}

model Translation {
  id          Int     @id @default(autoincrement())
  language    String?
  translation String?
  page        String?
  termId      Int
  sourceId    Int
  Source      Source  @relation(fields: [sourceId], references: [id])
  Term        Term    @relation(fields: [termId], references: [id])
}

model Source {
  id                Int                 @id @default(autoincrement())
  title             String?
  publisher         String?
  year              Int?
  publicationType   String?
  Definition        Definition[]
  Source_Authorship Source_Authorship[]
  Translation       Translation[]
}

model Author {
  id                Int                 @id @default(autoincrement())
  name              String?
  Source_Authorship Source_Authorship[]
}

model Term_Discipline_Definition {
  id           Int         @id @default(autoincrement())
  termId       Int
  disciplineId Int
  definitionId Int?
  Definition   Definition? @relation(fields: [definitionId], references: [id])
  Discipline   Discipline  @relation(fields: [disciplineId], references: [id])
  Term         Term        @relation(fields: [termId], references: [id])
}

model Source_Authorship {
  id       Int    @id @default(autoincrement())
  sourceId Int
  authorId Int
  Author   Author @relation(fields: [authorId], references: [id])
  Source   Source @relation(fields: [sourceId], references: [id])
}

model Users {
  id    Int    @id @default(autoincrement())
  nome  String
  email String
  senha String
}
