generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Alterações de tabelas
model Course {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  Glossary    Glossary[]
}

model Glossary {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  courseId    Int
  Course      Course       @relation(fields: [courseId], references: [id])
  Discipline  Discipline[]
}

model Discipline {
  id                         Int                          @id @default(autoincrement())
  name                       String
  year                       Int?
  description                String?
  glossaryId                 Int
  Glossary                   Glossary                     @relation(fields: [glossaryId], references: [id])
  Term_Discipline_Definition Term_Discipline_Definition[]
}

model Term {
  id                         Int                          @id @default(autoincrement())
  name                       String
  Translation                Translation[]
  Term_Discipline_Definition Term_Discipline_Definition[]
}

model Definition {
  id                         Int                          @id @default(autoincrement())
  description                String?
  page                       String                       @unique
  sourceId                   Int
  Source                     Source                       @relation(fields: [sourceId], references: [id])
  Term_Discipline_Definition Term_Discipline_Definition[]
}

model Translation {
  id          Int     @id @default(autoincrement())
  language    String?
  translation String?
  page        String?
  termId      Int
  sourceId    Int
  Term        Term    @relation(fields: [termId], references: [id])
  Source      Source  @relation(fields: [sourceId], references: [id])
}

model Source {
  id                Int                 @id @default(autoincrement())
  title             String?
  publisher         String?
  year              Int?
  publicationType   String?
  Source_Authorship Source_Authorship[]
  Translation       Translation[]
  Definition        Definition[]
}

model Author {
  id                Int                 @id @default(autoincrement())
  name              String?
  Source_Authorship Source_Authorship[]
}

model Term_Discipline_Definition {
  id           Int         @id @default(autoincrement())
  termId       Int
  disciplineId Int
  definitionId Int?
  Term         Term        @relation(fields: [termId], references: [id])
  Discipline   Discipline  @relation(fields: [disciplineId], references: [id])
  Definition   Definition? @relation(fields: [definitionId], references: [id])
}

model Source_Authorship {
  id       Int    @id @default(autoincrement())
  sourceId Int
  authorId Int
  Source   Source @relation(fields: [sourceId], references: [id])
  Author   Author @relation(fields: [authorId], references: [id])
}

model Users {
  id    Int    @id @default(autoincrement())
  nome  String
  email String
  senha String
}

// model Users {
//   prontuario String @id @default(uuid())
//   name       String
//   password   String
// }

// model Course {
//   id          String     @id @default(uuid())
//   name        String
//   description String?
//   glossary    Glossary[]
// }

// model Glossary {
//   id       String @id @default(uuid())
//   courseId String

//   name        String
//   description String?

//   course     Course       @relation(fields: [courseId], references: [id])
//   Discipline Discipline[]
// }

// model Discipline {
//   id         String @id @default(uuid())
//   glossaryId String

//   name        String
//   description String?
//   year        String?

//   glossary                   Glossary                     @relation(fields: [glossaryId], references: [id])
//   Term_Discipline_Definition Term_Discipline_Definition[]
// }

// model Term {
//   id   String @id @default(uuid())
//   name String

//   Term_Discipline_Definition Term_Discipline_Definition[]
//   Translation                Translation[]
// }

// model Definition {
//   id       String @id @default(uuid())
//   sourceId String

//   description String?
//   page        String  @unique

//   Term_Discipline_Definition Term_Discipline_Definition[]
//   source                     Source                       @relation(fields: [sourceId], references: [sourceId])
// }

// model Translation {
//   translationId String @id @default(uuid())
//   termId        String @default(uuid())
//   sourceId      String

//   language    String?
//   translation String?
//   page        String?

//   source Source @relation(fields: [sourceId], references: [sourceId])
//   term   Term   @relation(fields: [termId], references: [id])
// }

// model Source {
//   sourceId         String  @id @default(uuid())
//   title            String?
//   publisher        String?
//   year             String?
//   type_publication String?

//   Source_Authorship Source_Authorship[]
//   Translation       Translation[]
//   Definition        Definition[]
// }

// model Author {
//   authorId          String              @id @default(uuid())
//   name              String?
//   Source_Authorship Source_Authorship[]
// }

// model Term_Discipline_Definition {
//   Id           String  @id @default(uuid())
//   disciplineId String
//   termId       String
//   definitionId String?

//   discipline Discipline  @relation(fields: [disciplineId], references: [id])
//   definition Definition? @relation(fields: [definitionId], references: [id])
//   term       Term        @relation(fields: [termId], references: [id])
// }

// model Source_Authorship {
//   Id String @id @default(uuid())

//   sourceId String
//   authorId String?

//   author Author? @relation(fields: [authorId], references: [authorId])
//   source Source  @relation(fields: [sourceId], references: [sourceId])
// }
